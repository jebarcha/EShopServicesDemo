// <auto-generated />
using System;
using EShopServices.Api.Author.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EShopServices.Api.Author.Migrations
{
    [DbContext(typeof(ContextAuthor))]
    [Migration("20221207173754_MigrationPostgresInitial")]
    partial class MigrationPostgresInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EShopServices.Api.Author.Model.AcademicGrade", b =>
                {
                    b.Property<int>("AcademidGradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AcademidGradeId"));

                    b.Property<string>("AcademicCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AcademicGradeGuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AuthorBookId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GradeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AcademidGradeId");

                    b.HasIndex("AuthorBookId");

                    b.ToTable("AcademicGrade");
                });

            modelBuilder.Entity("EShopServices.Api.Author.Model.AuthorBook", b =>
                {
                    b.Property<int>("AuthorBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AuthorBookId"));

                    b.Property<string>("AuthorBookGuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AuthorBookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("EShopServices.Api.Author.Model.AcademicGrade", b =>
                {
                    b.HasOne("EShopServices.Api.Author.Model.AuthorBook", "AuthorBook")
                        .WithMany("AcademicGradeList")
                        .HasForeignKey("AuthorBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorBook");
                });

            modelBuilder.Entity("EShopServices.Api.Author.Model.AuthorBook", b =>
                {
                    b.Navigation("AcademicGradeList");
                });
#pragma warning restore 612, 618
        }
    }
}
